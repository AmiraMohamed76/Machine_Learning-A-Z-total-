#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Sep 14 17:14:40 2020

@author: amira_mohamed
"""
#Importing libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

#Importing dataset
dataset = pd.read_csv('Data.csv')
#creating matrix with 3 features without last col
X = dataset.iloc[: ,:-1].values
y = dataset.iloc[: ,3].values

#Handling missing data
from sklearn.impute import SimpleImputer
imputer = SimpleImputer(missing_values = np.nan , strategy = 'mean') 
# missingvalue consider nan in table 
# Strategy 'mean' this mean that we fill missing val with mean_val(Avarge)
imputer = imputer.fit(X[:, 1:3])
X[:, 1:3] = imputer.transform(X[:, 1:3])

#Encoding categorical data 
# encoding for indepentant variables
#بعمل encoding  لما يكون عندى داتا والداتا دى بتتقسم لcategories 
 # وانا عايزة اعمل encoding
# علشان اقدر اعمل بدل من one col هعمل 3 cols كل واحد فيها هيقولى 
#هل categorie دى موجودة فيديها 1 ولا مش موجودة وهيديها 0
from sklearn.preprocessing import LabelEncoder ,OneHotEncoder
from sklearn.compose import ColumnTransformer

labelencoder_x = LabelEncoder()
X[:,0] = labelencoder_x.fit_transform(X[:,0])
transform = ColumnTransformer([("Country", OneHotEncoder(), [0])], remainder="passthrough")
X = transform.fit_transform(X)
# encoding for depentant variables
labelencoder_y = LabelEncoder()
y = labelencoder_y.fit_transform(y)

# Splitting the dataset 
from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test = train_test_split(X, y, test_size =0.2 ,random_state =0)

# feature scaling 
from sklearn.preprocessing import StandardScaler
sc_X = StandardScaler()
X_train = sc_X.fit_transform(X_train)
X_test = sc_X.fit_transform(X_test)