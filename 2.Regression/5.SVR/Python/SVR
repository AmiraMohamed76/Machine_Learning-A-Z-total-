#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sat Sep 19 18:07:24 2020

@author: amiramohamed

"""
#Importing libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

#Importing dataset
dataset = pd.read_csv('Position_Salaries.csv')
#creating matrix with 3 features without last col
X = dataset.iloc[: , 1:2].values # X(Indepentant variable) must be matrix so we do that 1:2
y = dataset.iloc[: ,2:3].values  
# 2:3 because fit_transform method needs an array and we need to y as vector

# Splitting the dataset 
"""from sklearn.model_selection import train_test_split # we don't that because dataset is small
X_train,X_test,y_train,y_test = train_test_split(X, y, test_size =0.2 ,random_state =0)"""

# feature scaling 
from sklearn.preprocessing import StandardScaler
sc_X = StandardScaler()
sc_y = StandardScaler()
X = sc_X.fit_transform(X)
Y = sc_y.fit_transform(y)

# Fitting SVR to the dataset
from sklearn.svm import SVR
regressor = SVR(kernel= 'rbf')
regressor.fit(X, y)

# Predicting a new result 
y_pred = sc_y.inverse_transform(regressor.predict(sc_X.transform(np.array([[6.5]]))))
"""[[]] means that array with one col and one row
   sc_X.transform that used to scale number(6.5)
   sc_y.inverse_transform that used to inverse scale of salary(y)"""

# Visualizing SVR result
plt.scatter(X, y, color ='red')
plt.plot(X,regressor.predict(X), color ='blue')
plt.title('Truth or Bluff (SVR)')
plt.xlabel('Position Levels')
plt.ylabel('Salary')
plt.show()

# Visualizing SVR result(For higher resolution and smoother curve)
X_grid = np.arange(min(X), max(X), 0.1)
X_grid = X_grid.reshape((len(X_grid),1))
plt.scatter(X, y, color ='red')
plt.plot(X_grid,regressor.predict(X_grid), color ='blue')
plt.title('Truth or Bluff (SVR Model)')
plt.xlabel('Position Levels')
plt.ylabel('Salary')
plt.show()