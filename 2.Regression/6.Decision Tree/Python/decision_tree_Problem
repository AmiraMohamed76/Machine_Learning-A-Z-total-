#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sat Sep 19 23:11:03 2020

@author: amiramohamed
"""
# Decision Tree 

#Importing libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

#Importing dataset
dataset = pd.read_csv('Position_Salaries.csv')
#creating matrix with 3 features without last col
X = dataset.iloc[: , 1:2].values # X(Indepentant variable) must be matrix so we do that 1:2
y = dataset.iloc[: ,2].values  # y(Depentant variable) must be vector so we do that 1:2

# Splitting the dataset 
"""from sklearn.model_selection import train_test_split # we don't that because dataset is small
X_train,X_test,y_train,y_test = train_test_split(X, y, test_size =0.2 ,random_state =0)"""

# feature scaling 
"""from sklearn.preprocessing import StandardScaler
sc_X = StandardScaler()
X_train = sc_X.fit_transform(X_train)
X_test = sc_X.fit_transform(X_test)"""

# Fitting Decision Tree Regression to the dataset
from sklearn.tree import DecisionTreeRegressor
regressor = DecisionTreeRegressor(random_state=0)
regressor.fit(X, y)

# Predicting a new result with polynomial Regression
y_pred = regressor.predict([[6.5]])

# Visualizing the Regression result(For higher resolution and smoother curve)
X_grid = np.arange(min(X), max(X), 0.01)
X_grid = X_grid.reshape((len(X_grid),1))
plt.scatter(X, y, color ='red')
plt.plot(X_grid,regressor.predict(X_grid), color ='blue')
plt.title('Truth or Bluff (Regression Model)')
plt.xlabel('Position Levels')
plt.ylabel('Salary')
plt.show()

